version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    AWS_ACCOUNT_ID: "891062950211"
    ECR_REPO: "flask-app"
    IMAGE_TAG: "latest"
    CLUSTER_NAME: "flask-eks-cluster"

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo "Installing Helm..."
      - curl -fsSL -o helm.tar.gz https://get.helm.sh/helm-v3.13.3-linux-amd64.tar.gz
      - tar -zxvf helm.tar.gz
      - mv linux-amd64/helm /usr/local/bin/helm
      - helm version

  pre_build:
    commands:
      - echo "Logging into ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo "Getting commit hash..."
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "Commit hash:$COMMIT_HASH"
      - echo "Image tag:$IMAGE_TAG"
      - echo "Checking EKS cluster status..."
      - |
        while true; do
          status=$(aws eks describe-cluster --region $AWS_REGION --name $CLUSTER_NAME --query "cluster.status" --output text)
          echo "Cluster status: $status"
          if [ "$status" = "ACTIVE" ]; then
            break
          fi
          echo "Waiting 10 seconds..."
          sleep 10
        done
      - echo "Cluster is ACTIVE. Updating kubeconfig..."
      - aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t $ECR_REPO:$IMAGE_TAG .
      - docker tag $ECR_REPO:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG
      - echo "Writing image definitions..."
      - printf '[{"name":"flask-app","imageUri":"%s"}]' "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG" > imagedefinitions.json
      - echo "Deploying to EKS using Helm..."
      - helm upgrade --install flask-app ./helm-charts \
          --namespace flask \
          --create-namespace \
          --set image.repository=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO \
          --set image.tag=$IMAGE_TAG

artifacts:
  files:
    - imagedefinitions.json
